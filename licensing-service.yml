eureka:
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/
  instance:
    preferIpAddress: true
keycloak:
  auth-server-url: http://localhost:8080
  bearer-only: true
  credentials:
    secret: K6s6Fw9jLc5yTBtwjjHaXCVTs5ui3LrF
  realm: spmia-realm
  resource: ostock
  ssl-required: external
  use-resource-role-mappings: false

example:
  property: I AM THE DEFAULT LIC
management:
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: '*'
resilience4j:
  circuitbreaker:
    instances:
      licenseService:
        failureRateThreshold: 50
        registerHealthIndicator: true
        ringBufferSizeInClosedState: 5
        ringBufferSizeInHalfOpenState: 3
        waitDurationInOpenState: 10s
      organizationService:
        failureRateThreshold: 60
        registerHealthIndicator: true
        ringBufferSizeInClosedState: 6
        ringBufferSizeInHalfOpenState: 4
        waitDurationInOpenState: 20s
  bulkhead:
    instances:
      bulkheadLicenseService:
        maxWaitDuration: 10ms
        maxConcurrentCalls: 20
  thread-pool-bulkhead:
    instances:
      bulkheadLicenseService:
        maxThreadPoolSize: 1
        coreThreadPoolSize: 1
        queueCapacity: 1
        keepAliveDuration: 20ms
  ratelimiter:
    instances:
      licenseService:
        timeoutDuration: 1000ms
        limitRefreshPeriod: 5000
        limitForPeriod: 5
  retry:
    instances:
      retryLicenseService:
        maxRetryAttempts: 5
        waitDuration: 10000
        retry-exceptions:
          - java.util.concurrent.TimeoutException
spring:
  database:
    driverClassName: org.postgresql.Driver
  datasource:
    platform: postgres
    testWhileIdle: true
    validationQuery: SELECT 1
  jpa:
    database: POSTGRESQL
    hibernate:
      ddl-auto: none
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
logging:
  level:
    org.springframework.web: WARN
    com.optimagrowth: DEBUG

endpoints:
  cors:
    allow-credentials: true
    allowed-origins: "*"
    allowed-methods: "*"
    allowed-headers: "*"
server:
  port: 8180